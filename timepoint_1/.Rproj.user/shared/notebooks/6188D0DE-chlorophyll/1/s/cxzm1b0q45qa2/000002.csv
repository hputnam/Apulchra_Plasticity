"0","# Define function to read in chl data"
"0","read_chl <- function(file) {"
"0","  chl_data <- read_csv(file, skip = 24, n_max = 24) %>%"
"0","    select(-1) %>%"
"0","    magrittr::set_colnames(c(""row"", 1:12, ""wavelength"")) %>%"
"0","    fill(row) %>%"
"0","    gather(""col"", ""absorbance"", -wavelength, -row) %>%"
"0","    unite(""well"", c(row, col), sep = """")"
"0","}"
"0","# List chlorophyll data files"
"0","chl_path <- ""data/1_chlorophyll/""                                        # Path to chlorophyll data directory"
"0","all_chl_files <- list.files(path = chl_path, pattern = ""*.csv"")          # List all files in directory"
"0","chl_platemaps <- list.files(path = chl_path, pattern = ""platemap"")       # List platemap files"
"0","chl_data_files <- setdiff(all_chl_files, chl_platemaps)                  # List absorbance data files"
"0","# Read in all files into tibble"
"0","df <- tibble(file = chl_data_files) %>%"
"0","  mutate(platemap = map(file, ~ read_csv(paste0(chl_path, tools::file_path_sans_ext(.), ""_platemap.csv""))),"
"0","         chl_data = map(file, ~ read_chl(paste0(chl_path, .))))"
"2","Parsed with column specification:
cols(
  well = [31mcol_character()[39m,
  colony_id = [31mcol_character()[39m
)
"
"2","Parsed with column specification:
cols(
  well = [31mcol_character()[39m,
  colony_id = [31mcol_character()[39m
)
"
"2","Parsed with column specification:
cols(
  well = [31mcol_character()[39m,
  colony_id = [31mcol_character()[39m
)
"
"2","Parsed with column specification:
cols(
  well = [31mcol_character()[39m,
  colony_id = [31mcol_character()[39m
)
"
"2","Parsed with column specification:
cols(
  well = [31mcol_character()[39m,
  colony_id = [31mcol_character()[39m
)
"
"2","Missing column names filled in: 'X1' [1], 'X2' [2], 'X15' [15]"
"2","Parsed with column specification:
cols(
  X1 = [33mcol_logical()[39m,
  X2 = [31mcol_character()[39m,
  `1` = [32mcol_double()[39m,
  `2` = [32mcol_double()[39m,
  `3` = [32mcol_double()[39m,
  `4` = [32mcol_double()[39m,
  `5` = [32mcol_double()[39m,
  `6` = [32mcol_double()[39m,
  `7` = [32mcol_double()[39m,
  `8` = [32mcol_double()[39m,
  `9` = [32mcol_double()[39m,
  `10` = [32mcol_double()[39m,
  `11` = [32mcol_double()[39m,
  `12` = [32mcol_double()[39m,
  X15 = [32mcol_double()[39m
)
"
"2","Missing column names filled in: 'X1' [1], 'X2' [2], 'X15' [15]"
"2","Parsed with column specification:
cols(
  X1 = [33mcol_logical()[39m,
  X2 = [31mcol_character()[39m,
  `1` = [32mcol_double()[39m,
  `2` = [32mcol_double()[39m,
  `3` = [32mcol_double()[39m,
  `4` = [32mcol_double()[39m,
  `5` = [32mcol_double()[39m,
  `6` = [32mcol_double()[39m,
  `7` = [32mcol_double()[39m,
  `8` = [32mcol_double()[39m,
  `9` = [32mcol_double()[39m,
  `10` = [32mcol_double()[39m,
  `11` = [32mcol_double()[39m,
  `12` = [32mcol_double()[39m,
  X15 = [32mcol_double()[39m
)
"
"2","Missing column names filled in: 'X1' [1], 'X2' [2], 'X15' [15]"
"2","Parsed with column specification:
cols(
  X1 = [33mcol_logical()[39m,
  X2 = [31mcol_character()[39m,
  `1` = [32mcol_double()[39m,
  `2` = [32mcol_double()[39m,
  `3` = [32mcol_double()[39m,
  `4` = [32mcol_double()[39m,
  `5` = [32mcol_double()[39m,
  `6` = [32mcol_double()[39m,
  `7` = [32mcol_double()[39m,
  `8` = [32mcol_double()[39m,
  `9` = [32mcol_double()[39m,
  `10` = [32mcol_double()[39m,
  `11` = [32mcol_double()[39m,
  `12` = [32mcol_double()[39m,
  X15 = [32mcol_double()[39m
)
"
"2","Missing column names filled in: 'X1' [1], 'X2' [2], 'X15' [15]"
"2","Parsed with column specification:
cols(
  X1 = [33mcol_logical()[39m,
  X2 = [31mcol_character()[39m,
  `1` = [32mcol_double()[39m,
  `2` = [32mcol_double()[39m,
  `3` = [32mcol_double()[39m,
  `4` = [32mcol_double()[39m,
  `5` = [32mcol_double()[39m,
  `6` = [32mcol_double()[39m,
  `7` = [32mcol_double()[39m,
  `8` = [32mcol_double()[39m,
  `9` = [32mcol_double()[39m,
  `10` = [32mcol_double()[39m,
  `11` = [32mcol_double()[39m,
  `12` = [32mcol_double()[39m,
  X15 = [32mcol_double()[39m
)
"
"2","Missing column names filled in: 'X1' [1], 'X2' [2], 'X15' [15]"
"2","Parsed with column specification:
cols(
  X1 = [33mcol_logical()[39m,
  X2 = [31mcol_character()[39m,
  `1` = [32mcol_double()[39m,
  `2` = [32mcol_double()[39m,
  `3` = [32mcol_double()[39m,
  `4` = [32mcol_double()[39m,
  `5` = [32mcol_double()[39m,
  `6` = [32mcol_double()[39m,
  `7` = [32mcol_double()[39m,
  `8` = [32mcol_double()[39m,
  `9` = [32mcol_double()[39m,
  `10` = [32mcol_double()[39m,
  `11` = [32mcol_double()[39m,
  `12` = [32mcol_double()[39m,
  X15 = [32mcol_double()[39m
)
"
"0","# Merge platemap and data for each plate"
"0","df <- df %>%"
"0","  mutate(merged = map2(platemap, chl_data, ~ right_join(.x, .y)))"
"2","Joining, by = ""well""
"
"2","Joining, by = ""well""
"
"2","Joining, by = ""well""
"
"2","Joining, by = ""well""
"
"2","Joining, by = ""well""
"
