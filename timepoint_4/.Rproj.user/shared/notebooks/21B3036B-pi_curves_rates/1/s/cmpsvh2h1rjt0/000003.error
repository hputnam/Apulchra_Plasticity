{"frames":[{"func":"df %>% mutate(regs = furrr::future_map(thin_data, function(.) {\n    group_by(., Light_Value) %>% do(rankLcRg = fit_reg(.))\n}))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate(., regs = furrr::future_map(thin_data, function(.) {\n    group_by(., Light_Value) %>% do(rankLcRg = fit_reg(.))\n}))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate.data.frame(., regs = furrr::future_map(thin_data, function(.) {\n    group_by(., Light_Value) %>% do(rankLcRg = fit_reg(.))\n}))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate_cols(.data, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers({\n    for (i in seq_along(dots)) {\n        mask$across_cache_reset()\n        quosures <- expand_quosure(dots[[i]]) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mask$eval_all_mutate(quo)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"furrr::future_map(thin_data, function(.) {\n    group_by(., Light_Value) %>% do(rankLcRg = fit_reg(.))\n})","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"furrr_map_template(x = .x, fn = .f, dots = list(...), options = .options, \n    progress = .progress, type = \"list\", map_fn = purrr::map, \n    env_globals = .env_globals)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"furrr_template(args = x, fn = fn, dots = dots, n = n, options = options, \n    progress = progress, type = type, map_fn = map_fn, names = names, \n    env_globals = env_globals, expr = expr, extract = furrr_map_extract)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"future::value(futures)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"value.list(futures)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"resolve(y, result = TRUE, stdout = stdout, signal = signal, force = TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"resolve.list(y, result = TRUE, stdout = stdout, signal = signal, \n    force = TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signalConditionsASAP(obj, resignal = FALSE, pos = ii)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signalConditions(obj, exclude = getOption(\"future.relay.immediate\", \n    \"immediateCondition\"), resignal = resignal, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(condition)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function (e) \n{\n    local_call_step(dots = dots, .index = i, .fn = \"mutate\", \n        .dot_data = inherits(e, \"rlang_error_data_pronoun_not_found\")) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort(bullets, class = c(\"dplyr:::mutate_error\", \"dplyr_error\"), \n    error_name = error_name, error_expression = error_expression, \n    parent = e, bullets = bullets)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error: Problem with `mutate()` input `regs`.\n\u001B[31mx\u001B[39m invalid 'length.out' argument\n\u001B[34mâ„¹\u001B[39m Input `regs` is `furrr::future_map(...)`.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n"}